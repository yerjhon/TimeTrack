@{
    ViewBag.Title = "GetProjectForUser";
    Layout = null;
}

<link href="~/Content/jquery-ui-1.8.17.custom.css" rel="stylesheet" />
<link href="~/Content/jquery-ui.css" rel="stylesheet" />
<link href="~/Content/ui.jqgrid.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script src="~/Scripts/grid.locale-en.js"></script>
<script src="~/Scripts/jquery.jqGrid.min.js"></script>
<script src="~/Scripts/jquery-ui-1.8.24.min.js"></script>
<link href="~/Content/Chosen/chosen.css" rel="stylesheet" />
<script src="~/Content/Chosen/chosen.jquery.js"></script>

@using (Html.BeginForm("SaveProjectForUser", "Task", FormMethod.Post, new { @id = "formProject" }))
{
    <table>
        <tr>
            <td>
                @Html.Label("Project")
            </td>
            <td>
                @Html.ListBox("Projects", ViewBag.ProjectList as MultiSelectList, new { @class ="chsenProject", style="width: 500px; "})
            </td>
            <td>
                <button id="AddProject"> Save </button>  
            </td>
        </tr>
        <tr>
            <td>
                @Html.Hidden("UserId")
            </td>
        </tr>
    </table>
}

<table id="listProject"></table>
<div id="pager2"></div>


<div id = "DialogNotProject" title = "Alert!" hidden = "hidden">
    <span>
        Select one Project!
    </span>
</div>

<div id = "DialogProjectAssign" title="Alert!" hidden ="hidden">
    <span>
        The changes an been saved.
    </span>
</div>


<script type="text/javascript">
    
    jQuery(document).ready(function () {

        var grid = $("#listProject");

        var IdUser = jQuery("#listUsers").val();

        jQuery("#UserId").val(IdUser);

        var lastsel;
        jQuery("#listProject").jqGrid({
            url: "/Task/GetProjets?user=" + IdUser + "",
            datatype: "json",
            mtype: 'GET',
            colNames: ['ID PROJECT', 'PROJECT', 'DETAIL'],
            colModel: [
             { name: 'IdProject', index: 'IdProject', editable: true, sorttype: "text" },
             { name: 'Name', index: 'Name', editable: true, edittype: "select", editrules: { required: true }, editoptions: { dataUrl: '@Url.Action("GetProject")' } },
             { name: 'Description', index: 'Description', editable: true, editrules: { required: true }, edittype: "textarea", editoptions: { rows: "2", cols: "49" } }
             //{
             //    name: 'myac', width: 80, fixed: true, sortable: false, resize: false, formatter: 'actions', formatoptions:
             //      {
             //          keys: true,
             //          delOptions: {
             //              url: "/Task/Delete",
             //          },
             //      }
             //},
            ],
            formatter: 'actions',
            formatoptions: {
                keys: true,
                editformbutton: true,
            },
            loadonce: true,
            rowNum: 20,
            rowList: [10, 20, 30],
            pager: '#pager2',
            sortname: 'IdProject',
            viewrecords: true,
            height: 'auto',
            width: '1300',
            recreateForm: true,
            top: 5,
            sortorder: "desc",
            caption: "Projects"
        });

        jQuery("#listProject").hideCol("IdProject");
        jQuery("#listProject").jqGrid('navGrid', '#pager2', { edit: false, add: false, del: true, rel: false }, {}, {}, {
            url: "/Task/DeleteProject", 
            beforeShowForm: function (form)
            {
                var dlgDiv = $("#delmod" + grid[0].id);
                var parentDiv = dlgDiv.parent();
                var dlgWidth = dlgDiv.width();
                var parentWidth = parentDiv.width();
                var dlgHeight = dlgDiv.height();
                var parentHeight = parentDiv.height();

                var position = dlgWidth + parentWidth

                dlgDiv[0].style.left = Math.round((position) / 2) + "px";
            },
           @* beforeSubmit: function (postdata, formid) {
                var IdProject = postdata;
                var isValid = "Yes";
                jQuery.ajax({
                    url: "@Url.Action("ValidationProjectAndTask","Task")",
                     async: false,
                     data: {
                         "IdProject": IdProject,
                     },
                     type: "GET",
                     success: function (data) {
                         if (data == "") {
                             isValid = "Not";
                         }
                     }
                 });
                if (isValid == "Yes") {
                    return [true, ''];
                }
                else {
                    return [false, 'Project with Tasks'];
                }
            }*@
        }, {});

        jQuery("#AddProject").click(function (e) {
            e.preventDefault();
            var form = $("#formProject").serialize();
            var IdProjets = jQuery("#Projects").val();
            if (IdProjets != null) {
                $.ajax({
                    type: 'POST',
                    url: "/Task/SaveProjectForUser",
                    data: form,
                    dataType: 'json',
                    success: function (data) {
                        if (data.result = "Yes") {
                            jQuery("#DialogProjectAssign").dialog();
                            $("#listProject").jqGrid('setGridParam', { url: "/Task/GetProjets?user=" + IdUser + "", datatype: "json", page: 1 }).trigger("reloadGrid");
                        }
                    }
                });
            }
            else {
                jQuery("#DialogNotProject").dialog();
            }
        });
    });
</script>


 





